#include<iostream>
#include<windows.h>
#include<iomanip>

// 嬬車但 竺舛 = 格搾 180 , 株戚 50


#define ConsoleX = 87; // 嬬車但 紫戚綜
#define ConsoleY =50; // 嬬車但 紫戚綜


// 杷什通 奄層 企繰 x = 88, y = 50亜勲 舛亀喫
using std::cout;
using std::cin;
using std::endl;
int mapY = 1;


class map
{
public:
	void drawMap();
	void gotoxy(int x, int y);
	void textColor(int foreground, int background);
};


void map::drawMap()
{
	gotoxy(1, mapY); // 1虞昔
	textColor(15, 15);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 1); // 2虞昔
	textColor(15, 15);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 2); // 3虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 3); // 4虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 4); // 5虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 5); // 6虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 6); // 7虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 7); // 8虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 8); // 9虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 9); // 10虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 10); // 11虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ"; // 81
	gotoxy(1, mapY + 11); // 12虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ"; // 81
	gotoxy(1, mapY + 12); // 13虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ"; // 81
	gotoxy(1, mapY + 13); // 14虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 14); // 15虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 15); // 16虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 16); // 17虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 17); // 18虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 18); // 19虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 19); // 20虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 20); // 21虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 21); // 22虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 22); // 23虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 23); // 24虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 24); // 25虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 25); // 26虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 26); // 27虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 27); // 28虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 28); // 29虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 29); // 30虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 30); // 31虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 31); // 32虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 32); // 33虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 33); // 34虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 34); // 35虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 35); // 36虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 36); // 37虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 37); // 38虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 38); // 39虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 39); // 40虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 40); // 41虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 41); // 42虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 42); // 43虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 43); // 44虞昔
	textColor(9, 9);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 44); // 45虞昔
	textColor(7, 7);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 45); // 46虞昔
	textColor(7, 7);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 46); // 47虞昔
	textColor(7 ,7);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 47); // 48虞昔
	textColor(15, 15);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 48); // 49虞昔
	textColor(15, 15);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";
	gotoxy(1, mapY + 49); // 50虞昔
	textColor(15, 15);
	cout << "けけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけけ";









}


void map::gotoxy(int x, int y)
{
	COORD pos;
	pos.X = x;
	pos.Y = y;

	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

void map::textColor(int foreground, int background)
{
	int color = foreground + background * 16;
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), color);
}