#pragma once
#include<iostream>

#pragma region 문자열 + 삼항 연산자
/*

▶ 삼항 연산자

- 경우에 따라서 if ~else 문을 일부 대체할 수 있다.
	ㄴ 적당한 로직에 적절히 활용을 한다면 코드 간결화를 얻을 수 있다.
	ㄴ 경우에 따라서 약간의 실행속도 UP

EX)
-(조건식) ? true : false;
ㄴ 무슨뜻 ? : 조건이 참이면 T / 아니면 F 라는 의미.



▶ 문자열이란?

- 문자열이란 문자의 조합을 의미하며 문자열을 활용할 경우 문자가 조합된 단어 또는 문장을
표현하는 것이 가능하다.

- 문자열을 활용하면 화면상에 문자로 된 정보를 출력하는 작업이 수월하다.

- 메모리 단위

- char = 1Byte

- 1 Byte = 8Bit
ㄴ 1bit: 0과 1을 표현할 수 있는 가장 작은 단위


- 문자로 표현함에 있어 메모리 효율문제로 int보다 char형이 어울린다.


용량 단위
※ BIT -> BYTE -> KB  -> MB -> GB -> TB -> PB(페타) -> EB(엑사) -> ZB(제타)
▶ 클라이언트 프로그래머는 좌측, 서버 프로그래머는 우측으로 효율성을 고려하여야 한다. (서버는 전체구조를 파악해 데이터 패킷을 잡아야 하기 때문.)
▶ 클라이언트라도 서버쪽 데이터 패킷 전송 방법을 알고 있어야 하고, 서버도 클라이언트측의 데이터 패킷 전송 방법을 알고 있어야 한다.




*/

/* 별도 메모
* 
class = 32bit = 4바이트 /64bit = 8바이트의 크기를 가짐
프로그래머는 String을 쓸 줄만 아는 사람이 아니라, 만들줄 아는 사람이 되어야 함.
String의 내부는 Char로 구현되어 있음.

게임 스크립트 들어가는 형식 3가지!

(3가지 형식 모두 전체적으로 스크립트 버퍼를 모두 넣어두고 작업)
1. 찍기 형식
(찍기 형식은 하나씩 찍어두는 형식)
2. 파티션 형식 
(보여주는 칸 만큼 보여주는 형식)
3. 올 버퍼 형식
(미리 찍어뒀다가 한번에 다 보여주는 형식)
(올 버퍼 형식은 주로 어디에 쓰인다? : 저널(많은 글이 필요한 형식)형식에서 주로 쓰인다!)




한글 1글자에 2Byte의 용량을 먹는다.
프로그래머는 항상 어떻게하면 메모리 효율성을 높일지 항상 고민해야 한다.
효율성을 높이는 방법?
1. 공간 복잡도 고려
2. 시간 복잡도 고려
3. 절차가 많아지면 효율은 떨어질 수 밖에 없다.

★교수님 조언 = char형 자료형을 자주 써보도록! ★

*/
#pragma endregion

namespace EXAMPLE_02
{
	void Example();
}